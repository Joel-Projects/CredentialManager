image: docker:latest

.testSetup: &testSetup
    stage: test
    allow_failure: true
    coverage: '/^TOTAL.*\s+(\d+\%)$/'
    services:
        - postgres:latest
    variables:
        POSTGRES_DB: 'postgres_test'
        POSTGRES_USER: 'postgres'
        POSTGRES_PASSWORD: ''
        POSTGRES_HOST_AUTH_METHOD: 'trust'
        DATABASE_URI: 'postgresql://postgres:@postgres:5432/postgres_test'
        SCHEMA_NAME: 'public'
    script:
        - pip install -r app/requirements.txt -r tests/requirements.txt
        - pytest --cov-report=term --cov=app tests

services:
    - docker:dind

stages:
    - build
    - release
    - test
    - sentry_release

variables:
    CONTAINER_BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

build:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CONTAINER_RELEASE_IMAGE || true
    - docker build --cache-from $CONTAINER_RELEASE_IMAGE -t $CONTAINER_BUILD_IMAGE -t $CONTAINER_RELEASE_IMAGE .
    - docker push $CONTAINER_BUILD_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE

include:
  - template: Container-Scanning.gitlab-ci.yml

#build:build-latest:
#    stage: build
#    script:
#        - docker build --pull -t $CONTAINER_BUILD_IMAGE .
#        - docker push $CONTAINER_BUILD_IMAGE
#
#release:tag:
#    stage: release
#    script:
#        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
#        - docker pull $CONTAINER_BUILD_IMAGE
#        - docker tag $CONTAINER_BUILD_IMAGE $CONTAINER_RELEASE_IMAGE
#        - docker push $CONTAINER_RELEASE_IMAGE

test:pytest3.8:
    image: python:3.8
    <<: *testSetup

test:pytest3.7:
    image: python:3.7
    <<: *testSetup

test:pytest3.6:
    image: python:3.6
    <<: *testSetup

test:sonarqube:
    image:
        name: sonarsource/sonar-scanner-cli:latest
        entrypoint: ['']
    stage: test
    allow_failure: true
    variables:
      SONAR_TOKEN: $SONAR_TOKEN
      SONAR_HOST_URL: 'https://qube.jesassn.org'
      GIT_DEPTH: 0
    script:
        - sonar-scanner -Dsonar.projectKey=credmgr -Dproject.settings=$CI_PROJECT_DI/sonar-project.properties -Dsonar.qualitygate.wait=true
    only:
        - master

sentry_release:
    image: python:latest
    stage: .post
    script:
        - pip install requests
        - export author=$(git show -s --format='%an' HEAD)
        - export email=$(git show -s --format='%ae' HEAD)
        - export message=$(git show -s --format='%s' HEAD)
        - python3 release.py $SENTRY_AUTH_TOKEN $CI_COMMIT_SHA $CI_PROJECT_NAME '$author' $email '$message'
