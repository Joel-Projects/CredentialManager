image: docker:latest

.lint_setup: &lint_setup
    stage: lint
    allow_failure: false
    image: python:latest
    before_script:
        - python -V  # Print out python version for debugging
        - pip install virtualenv
        - virtualenv venv
        - source venv/bin/activate
        - pip install -r lint-requirements.txt

.test_setup: &test_setup
    stage: test
    allow_failure: true
    coverage: '/^TOTAL.*\s+(\d+\%)$/'
    services:
        -   name: postgres:latest
            alias: postgres
            command:
                - --max_connections=500
    variables:
        POSTGRES_DB: 'postgres_test'
        POSTGRES_USER: 'postgres'
        POSTGRES_PASSWORD: ''
        POSTGRES_HOST_AUTH_METHOD: 'trust'
        DATABASE_URI: 'postgresql://postgres:@postgres:5432/postgres_test'
        SCHEMA_NAME: 'public'
    before_script:
        - python -V  # Print out python version for debugging
        - pip install virtualenv
        - virtualenv venv
        - source venv/bin/activate
    script:
        - pip install -r app/requirements.txt -r tests/requirements.txt
        - pytest --cov-report=term --cov=app tests

services:
    - docker:dind

include:
    -   template: Container-Scanning.gitlab-ci.yml

stages:
    - build
    - lint
    - test
    - sentry_release

variables:
    GITLAB_BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    GITLAB_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

build:
    stage: build
    script:
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN reg.gitlab.jesassn.org
        - docker pull $GITLAB_RELEASE_IMAGE || true
        - docker build --cache-from $GITLAB_RELEASE_IMAGE -t $GITLAB_BUILD_IMAGE -t $GITLAB_RELEASE_IMAGE .
        - docker push $GITLAB_BUILD_IMAGE
        - docker push $GITLAB_RELEASE_IMAGE
    only:
        - master
        - tags


test:pytest3.6:
    <<: *test_setup
    image: python:3.6

test:pytest3.7:
    <<: *test_setup
    image: python:3.7

test:pytest3.8:
    <<: *test_setup
    image: python:3.8

test:pytest3.9:
    <<: *test_setup
    image: python:3.9

test:pytest3.10:
    <<: *test_setup
    image: python:3.10


black:
    <<: *lint_setup
    script:
        - black --check .

isort:
    <<: *lint_setup
    script:
        - isort -c .


publish:release:
    image: getsentry/sentry-cli
    stage: sentry_release
    allow_failure: true
    variables:
        SENTRY_ORG: $CI_PROJECT_NAMESPACE
        SENTRY_URL: 'https://sentry.jesassn.org'
    script:
        - sentry-cli releases new -p credentialmanager $CI_COMMIT_TAG
        - sentry-cli releases set-commits --auto $CI_COMMIT_TAG
    only:
        - tags