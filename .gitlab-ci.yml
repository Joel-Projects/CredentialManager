image: docker:latest

.testSetup: &testSetup
    stage: test
    allow_failure: true
    coverage: '/^TOTAL.*\s+(\d+\%)$/'
    services:
        - postgres:latest
    variables:
        POSTGRES_DB: 'postgres_test'
        POSTGRES_USER: 'postgres'
        POSTGRES_PASSWORD: ''
        POSTGRES_HOST_AUTH_METHOD: 'trust'
        DATABASE_URI: 'postgresql://postgres:@postgres:5432/postgres_test'
        SCHEMA_NAME: 'public'
    script:
        - pip install -r app/requirements.txt -r tests/requirements.txt
        - pytest --cov-report=term --cov=app tests

services:
    - docker:dind

stages:
    - build
    - release
    - test
    - sentry_release

variables:
    GITLAB_BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    GITLAB_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
    AZURE_BUILD_IMAGE: credmgr.azurecr.io/jes/credentialmanager:$CI_COMMIT_REF_SLUG
    AZURE_RELEASE_IMAGE: credmgr.azurecr.io/jes/credentialmanager:latest

build:
    stage: build
    script:
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker pull $GITLAB_RELEASE_IMAGE || true
        - docker build --cache-from $GITLAB_RELEASE_IMAGE -t $GITLAB_BUILD_IMAGE -t $GITLAB_RELEASE_IMAGE -t $AZURE_BUILD_IMAGE -t $AZURE_RELEASE_IMAGE  .
        - docker push $GITLAB_BUILD_IMAGE
        - docker push $GITLAB_RELEASE_IMAGE

        - docker login credmgr.azurecr.io -u credmgr -p $AZURE_REGISTRY_PASSWORD
        - echo $GITLAB_BUILD_IMAGE
        - echo $GITLAB_RELEASE_IMAGE
        - echo $AZURE_BUILD_IMAGE
        - echo $AZURE_RELEASE_IMAGE
        - docker push $AZURE_BUILD_IMAGE
        - docker push $AZURE_RELEASE_IMAGE
    only:
        - master
        - tags

include:
    -   template: Container-Scanning.gitlab-ci.yml

test:pytest3.6:
    image: python:3.6
    <<: *testSetup

test:pytest3.7:
    image: python:3.7
    <<: *testSetup

test:pytest3.8:
    image: python:3.8
    <<: *testSetup

test:pytest3.9:
    image: python:3.9
    <<: *testSetup

publish:release:
    image: getsentry/sentry-cli
    stage: sentry_release
    before_script: []
    variables:
        SENTRY_ORG: $CI_PROJECT_NAMESPACE
        SENTRY_URL: 'https://sentry.jesassn.org'
    script:
        - sentry-cli releases new -p credentialmanager $CI_COMMIT_TAG
        - sentry-cli releases set-commits --auto $CI_COMMIT_TAG
    only:
        - tags