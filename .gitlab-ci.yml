image: docker:latest
services:
  - docker:dind
  - postgres:latest

stages:
  - test
  - build
  - release
  - sentry_release

variables:
  CONTAINER_BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  POSTGRES_DB: 'postgres_test'
  POSTGRES_USER: 'postgres'
  POSTGRES_PASSWORD: ''
  POSTGRES_HOST_AUTH_METHOD: 'trust'

#before_script:
#  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY

build:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --pull -t $CONTAINER_BUILD_IMAGE .
    - docker push $CONTAINER_BUILD_IMAGE

release:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CONTAINER_BUILD_IMAGE
    - docker tag $CONTAINER_BUILD_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE

test:pytest:
  image: python:3.7
  stage: test
  variables:
    DATABASE_URI: "postgresql://postgres:@postgres:5432/postgres_test"
  script:
    - pip install -r requirements.txt
    - pip install -r tests/requirements.txt
    - pytest
  coverage: '/^TOTAL.*\s+(\d+\%)$/'

sentry_release:
  image: python:latest
  stage: .post
  script:
    - echo "release to sentry"
    - pip install requests
    - export author=$(git show -s --format='%an' HEAD)
    - export email=$(git show -s --format='%ae' HEAD)
    - export message=$(git show -s --format='%s' HEAD)
    - python3 release.py $SENTRY_AUTH_TOKEN $CI_COMMIT_SHA $CI_PROJECT_NAME '$author' $email '$message'
